{
  "version": 3,
  "sources": ["../../../../../../src/app/routes/auth/auth.controller.ts"],
  "sourcesContent": ["import { NextFunction, Request, Response, Router } from 'express';\r\nimport auth from './auth';\r\nimport { createUser, getCurrentUser, login, updateUser } from './auth.service';\r\n\r\nconst router = Router();\r\n\r\n/**\r\n * Create an user\r\n * @auth none\r\n * @route {POST} /users\r\n * @bodyparam user User\r\n * @returns user User\r\n */\r\nrouter.post('/users', async (req: Request, res: Response, next: NextFunction) => {\r\n  try {\r\n    const user = await createUser({ ...req.body.user, demo: false });\r\n    res.status(201).json({ user });\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n});\r\n\r\n/**\r\n * Login\r\n * @auth none\r\n * @route {POST} /users/login\r\n * @bodyparam user User\r\n * @returns user User\r\n */\r\nrouter.post('/users/login', async (req: Request, res: Response, next: NextFunction) => {\r\n  try {\r\n    const user = await login(req.body.user);\r\n    res.json({ user });\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n});\r\n\r\n/**\r\n * Get current user\r\n * @auth required\r\n * @route {GET} /user\r\n * @returns user User\r\n */\r\nrouter.get('/user', auth.required, async (req: Request, res: Response, next: NextFunction) => {\r\n  try {\r\n    const user = await getCurrentUser(req.auth?.user?.id);\r\n    res.json({ user });\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n});\r\n\r\n/**\r\n * Update user\r\n * @auth required\r\n * @route {PUT} /user\r\n * @bodyparam user User\r\n * @returns user User\r\n */\r\nrouter.put('/user', auth.required, async (req: Request, res: Response, next: NextFunction) => {\r\n  try {\r\n    const user = await updateUser(req.body.user, req.auth?.user?.id);\r\n    res.json({ user });\r\n  } catch (error) {\r\n    next(error);\r\n  }\r\n});\r\n\r\nexport default router;\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAwD;AACxD,kBAAiB;AACjB,IAAAA,eAA8D;AAE9D,MAAM,aAAS,uBAAO;AAStB,OAAO,KAAK,UAAU,OAAO,KAAc,KAAe,SAAuB;AAC/E,MAAI;AACF,UAAM,OAAO,UAAM,yBAAW,EAAE,GAAG,IAAI,KAAK,MAAM,MAAM,MAAM,CAAC;AAC/D,QAAI,OAAO,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC;AAAA,EAC/B,SAAS,OAAO;AACd,SAAK,KAAK;AAAA,EACZ;AACF,CAAC;AASD,OAAO,KAAK,gBAAgB,OAAO,KAAc,KAAe,SAAuB;AACrF,MAAI;AACF,UAAM,OAAO,UAAM,oBAAM,IAAI,KAAK,IAAI;AACtC,QAAI,KAAK,EAAE,KAAK,CAAC;AAAA,EACnB,SAAS,OAAO;AACd,SAAK,KAAK;AAAA,EACZ;AACF,CAAC;AAQD,OAAO,IAAI,SAAS,YAAAC,QAAK,UAAU,OAAO,KAAc,KAAe,SAAuB;AAC5F,MAAI;AACF,UAAM,OAAO,UAAM,6BAAe,IAAI,MAAM,MAAM,EAAE;AACpD,QAAI,KAAK,EAAE,KAAK,CAAC;AAAA,EACnB,SAAS,OAAO;AACd,SAAK,KAAK;AAAA,EACZ;AACF,CAAC;AASD,OAAO,IAAI,SAAS,YAAAA,QAAK,UAAU,OAAO,KAAc,KAAe,SAAuB;AAC5F,MAAI;AACF,UAAM,OAAO,UAAM,yBAAW,IAAI,KAAK,MAAM,IAAI,MAAM,MAAM,EAAE;AAC/D,QAAI,KAAK,EAAE,KAAK,CAAC;AAAA,EACnB,SAAS,OAAO;AACd,SAAK,KAAK;AAAA,EACZ;AACF,CAAC;AAED,IAAO,0BAAQ;",
  "names": ["import_auth", "auth"]
}
