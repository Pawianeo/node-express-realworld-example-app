{
  "version": 3,
  "sources": ["../../../../../../src/app/routes/profile/profile.service.ts"],
  "sourcesContent": ["import prisma from '../../../prisma/prisma-client';\r\nimport profileMapper from './profile.utils';\r\nimport HttpException from '../../models/http-exception.model';\r\n\r\nexport const getProfile = async (usernamePayload: string, id?: number) => {\r\n  const profile = await prisma.user.findUnique({\r\n    where: {\r\n      username: usernamePayload,\r\n    },\r\n    include: {\r\n      followedBy: true,\r\n    },\r\n  });\r\n\r\n  if (!profile) {\r\n    throw new HttpException(404, {});\r\n  }\r\n\r\n  return profileMapper(profile, id);\r\n};\r\n\r\nexport const followUser = async (usernamePayload: string, id: number) => {\r\n  const profile = await prisma.user.update({\r\n    where: {\r\n      username: usernamePayload,\r\n    },\r\n    data: {\r\n      followedBy: {\r\n        connect: {\r\n          id,\r\n        },\r\n      },\r\n    },\r\n    include: {\r\n      followedBy: true,\r\n    },\r\n  });\r\n\r\n  return profileMapper(profile, id);\r\n};\r\n\r\nexport const unfollowUser = async (usernamePayload: string, id: number) => {\r\n  const profile = await prisma.user.update({\r\n    where: {\r\n      username: usernamePayload,\r\n    },\r\n    data: {\r\n      followedBy: {\r\n        disconnect: {\r\n          id,\r\n        },\r\n      },\r\n    },\r\n    include: {\r\n      followedBy: true,\r\n    },\r\n  });\r\n\r\n  return profileMapper(profile, id);\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAmB;AACnB,qBAA0B;AAC1B,4BAA0B;AAEnB,MAAM,aAAa,OAAO,iBAAyB,OAAgB;AACxE,QAAM,UAAU,MAAM,qBAAAA,QAAO,KAAK,WAAW;AAAA,IAC3C,OAAO;AAAA,MACL,UAAU;AAAA,IACZ;AAAA,IACA,SAAS;AAAA,MACP,YAAY;AAAA,IACd;AAAA,EACF,CAAC;AAED,MAAI,CAAC,SAAS;AACZ,UAAM,IAAI,sBAAAC,QAAc,KAAK,CAAC,CAAC;AAAA,EACjC;AAEA,aAAO,eAAAC,SAAc,SAAS,EAAE;AAClC;AAEO,MAAM,aAAa,OAAO,iBAAyB,OAAe;AACvE,QAAM,UAAU,MAAM,qBAAAF,QAAO,KAAK,OAAO;AAAA,IACvC,OAAO;AAAA,MACL,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,YAAY;AAAA,QACV,SAAS;AAAA,UACP;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,IACA,SAAS;AAAA,MACP,YAAY;AAAA,IACd;AAAA,EACF,CAAC;AAED,aAAO,eAAAE,SAAc,SAAS,EAAE;AAClC;AAEO,MAAM,eAAe,OAAO,iBAAyB,OAAe;AACzE,QAAM,UAAU,MAAM,qBAAAF,QAAO,KAAK,OAAO;AAAA,IACvC,OAAO;AAAA,MACL,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,YAAY;AAAA,QACV,YAAY;AAAA,UACV;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,IACA,SAAS;AAAA,MACP,YAAY;AAAA,IACd;AAAA,EACF,CAAC;AAED,aAAO,eAAAE,SAAc,SAAS,EAAE;AAClC;",
  "names": ["prisma", "HttpException", "profileMapper"]
}
